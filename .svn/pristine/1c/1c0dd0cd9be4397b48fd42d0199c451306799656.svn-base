package com.upc.common.file.service;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.multipart.MultipartFile;

import com.upc.common.file.dao.MemberFileDAO;
import com.upc.common.file.vo.FileVO;

/**
 * 회원 관련 파일 ServiceImpl
 * @author 이 수빈
 * @Date 2018.12.17
 * @version 1.0
 * @see
 * 수정이력
 * 버전	수정일		수정자	수정내용
 * 1.1	2018.12.26	이수빈	트랜잭션 처리
 */
@Service("memberFileService")
@Transactional
public class MemberFileServiceImpl implements MemberFileService {

	private static final Logger logger = LoggerFactory.getLogger(MemberFileServiceImpl.class);
	
	public static final String path = "c://files/" + pathName();
	
	@Autowired
	private MemberFileDAO dao;
	
	/** 
	 * 경로 지정(해당 날짜)
	 * @return
	 * @author 이수빈
	 * @since 2018.12.24
	 * @version 1.0
	 */
	public static final String pathName() {
		
		Date date = new Date();
		SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");
		String dateFormat = format.format(date);
		
		/*String serverPath = "http://210.181.192.63/" + dateFormat;
		String pathnm;

		pathnm = Paths.get(serverPath).toString();*/
		return dateFormat;
		//return pathnm;
	}
	
	/** 
	 * 파일업로드
	 * @param string(id)
	 * @param multipartFile
	 * @author 이수빈
	 * @since 2018.12.17
	 * @version 1.0
	 */
	@Override
	@Transactional(rollbackFor=Exception.class)
	public String insertFile(String prtnum, MultipartFile file, String applnum, String formtype) throws Exception {

		File dir = new File(path);
		
		if(!dir.isDirectory()) {
			dir.mkdirs();
		}
		
		String filenm = file.getOriginalFilename();
		String fileseq = uploadAttFile();
		
		FileVO fileVO = new FileVO();
		
		int pos = filenm.lastIndexOf(".");
		String type = filenm.substring(pos);

		fileVO.setPrtnum(prtnum);		
		fileVO.setFileseq(fileseq);
		fileVO.setFilenm(filenm);
		fileVO.setPath(path);
		fileVO.setType(type);
		fileVO.setRgstid(prtnum);
		fileVO.setApplnum(applnum);
		fileVO.setFormtype(formtype);
		
		logger.info("fileVO : " + fileVO.toString());
		
		dao.insertFile(fileVO);
		File target = new File(path,fileseq+type);
		FileCopyUtils.copy(file.getBytes(), target);
		
		return fileseq;
	}
	
	/** 
	 * 파일 다운로드를 위한 파일 저장 정보 검색(파일명, 경로)
	 * @param string(fileseq)
	 * @return
	 * @author 이수빈
	 * @since 2018.12.17
	 * @version 1.0
	 * 
	 */
	@Override
	public Map<String,String> selectFileInfo(String fileseq) throws Exception {
	
		Map<String, String> fileInfo = dao.selectFileInfo(fileseq);
		return fileInfo;
	}
	
	/** 
	 * 파일 고유이름 생성(fileSeq)
	 * @param string(filenm)
	 * @return
	 * @author 이수빈
	 * @since 2018.12.17
	 * @version 1.0
	 * 수정이력
	 * 버전		수정일		수정자		수정내용
	 * 1.0 		2018.12.17	이수빈		최초작성
	 * 1.1		2018.12.20	이수빈		채번
	 */
	private String uploadAttFile() throws Exception {
		
		Date date = new Date();
		SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");
		String dateFormat = format.format(date);
		
		String seq = String.format("%04d", dao.selectMaxseq()+1);
		String fileseq = "ATT" + dateFormat	+ seq;
		
		logger.info("fileseq : " + fileseq);
		
		return fileseq;
		
	}


}
