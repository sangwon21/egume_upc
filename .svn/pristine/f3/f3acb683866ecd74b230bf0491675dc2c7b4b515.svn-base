package com.upc.admin.wrtinfodetail.controller;

import java.security.Principal;
import java.util.Map;

import javax.annotation.Resource;

import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.upc.admin.applrcptlist.vo.ApplRcptListVO;
import com.upc.admin.applrcptrgst.service.ApplRcptRgstServiceImpl;
import com.upc.admin.wrtinfodetail.service.WrtInfoDetailService;
import com.upc.admin.wrtinfodetail.vo.CnfrmPrchIsueVO;
import com.upc.admin.wrtinfodetail.vo.CnfrmPrchReqVO;
import com.upc.common.file.vo.FileVO;

/**
 * 발급지원 작성 상세조회 컨트롤러
 * @author 신혜영
 * @since 2018. 12. 21.
 * @version 1.2
 * @see
 * 수정이력
 * 버전		수정일		수정자		수정내용
 * 1.1	2018.12.31		신혜영	uploadSmpFile() 수정
 * 1.2	2019.01.02		신혜영	updateCnfrmPrchReqInfo(),updateMdfReq() 추가
 */
@Controller
@RequestMapping("/admin")
public class WrtInfoDetailController {
	@Resource(name = "wrtInfoDetailService")
	private WrtInfoDetailService wrtInfoDetailService;
	
	@Autowired
	private ApplRcptRgstServiceImpl	applRcptRgstServiceImpl;
	
	private static final org.slf4j.Logger logger = LoggerFactory.getLogger(WrtInfoDetailController.class);
	
	/**
	* 작성자 상세조회 화면에 필요한 정보를 가져옴
	* @param applnum
	* @param model
	* @return String
	* @author 신혜영
	* @since 2018. 12. 24.
	* @version 1.0
	*/
	@RequestMapping(value = "/wrtInfoDetail.do", method = RequestMethod.GET)
	public String getWrtInfoDetail(@RequestParam(value="applnum") String applnum, Model model, Principal principal) {
		
		ApplRcptListVO applRcptListVO = new ApplRcptListVO();
		applRcptListVO.setApplNum(applnum);
		
		//근거서류 가져옴
		model.addAttribute("fileList",applRcptRgstServiceImpl.fileInfoList(applRcptListVO));
		
		//신청 상세조회 정보 가져옴 
		CnfrmPrchReqVO cnfrmPrchReqVO = wrtInfoDetailService.selectCnfrmPrchReq(applnum);
		model.addAttribute("cnfrmprchreq", cnfrmPrchReqVO);
		
		
		//구매확인서 원본 목록 가져옴
		if(cnfrmPrchReqVO.getIssuenum() != null) {
			model.addAttribute("issueList", wrtInfoDetailService.selectCnfrmPrchIsue(cnfrmPrchReqVO));
		}
		
		model.addAttribute("loginId", principal.getName());
		
		logger.info("end get detail infomation controller");
		
		return "writer/wrtInfoDetail";
	}
	
	/**
	* 작성자 상세조회 화면에서 수정한 정보를 업데이트
	* @param cnfrmPrchReqVO
	* @return void
	* @author 신혜영
	* @since 2019. 1. 2.
	* @version 1.0
	 * @throws Exception 
	*/
	@RequestMapping(value = "/updateCnfrmPrchReqInfo", method = RequestMethod.POST)
	public String updateCnfrmPrchReqInfo(@ModelAttribute CnfrmPrchReqVO cnfrmPrchReqVO, @ModelAttribute FileVO fileVO
			,MultipartFile tax[], MultipartFile sup[], String modTax[], String modSup[]) throws Exception {
		
		logger.info("front update CnfrmPrchReq Info with files "+cnfrmPrchReqVO.toString());
		logger.info("front update CnfrmPrchReq Info with files "+fileVO.toString());
		logger.info(tax.toString());
		logger.info(sup.toString());
		logger.info(modTax[0], modTax[1], modTax[2]);
		logger.info(modSup[0], modSup[1], modSup[2]);
		
		wrtInfoDetailService.updateCnfrmPrchReqInfo(cnfrmPrchReqVO, fileVO, tax, sup, modTax, modSup);
		
		logger.info("end update CnfrmPrchReq Info with files "+cnfrmPrchReqVO.toString());
		
		return "redirect:wrtInfoDetail.do?applnum="+cnfrmPrchReqVO.getApplnum();
	}
	
	
	/**
	* 견본 파일 업로드 controller
	* @param cnfrmPrchReqVO
	* @param smpFile
	* @return String
	* @author 신혜영
	* @since 2018. 12. 27.
	* @version 1.1
	* @throws Exception 
	* 수정이력
	* 버전		수정일		수정자		수정내용
	* 1.1	2018.12.31		신혜영	파라미터 수정, 건수 관련 예외 시 알림 추가
	*/
	@RequestMapping(value="/uploadSmpFile", method=RequestMethod.POST)
	@ResponseBody
	public String uploadSmpFile(MultipartHttpServletRequest smpFileForm, Principal principal) throws Exception{

		try {
			wrtInfoDetailService.insertSmpFile(smpFileForm, principal.getName());
		} catch (Exception e) {
			if(e.getMessage() == "invalid user rmncnt") {
				return "rmncnt";
			} else if(e.getMessage() == "updating user rmncnt is failed") {
				return "rmncnt2";
			} else {
				throw e;
			}
		}
		
		logger.info("end upload sample file controller");

		return "success";
	}
	
	/**
	* 견본 확인 파일 업로드 controller
	* @param cnfrmPrchReqVO
	* @param smpCnfrmFile
	* @param principal
	* @return String
	* @throws Exception
	* @author 신혜영
	* @since 2018. 12. 28.
	* @version 1.0
	*/
	@RequestMapping(value="/uploadSmpCnfrmFile", method=RequestMethod.POST)
	public String uploadSmpCnfrmFile(@ModelAttribute CnfrmPrchReqVO cnfrmPrchReqVO, @ModelAttribute MultipartFile smpCnfrmFile, Principal principal) throws Exception {
		
		wrtInfoDetailService.insertSmpCnfrmFile(cnfrmPrchReqVO, smpCnfrmFile, principal.getName());
		
		logger.info("end upload sample confirm file controller");
		
		return "forward:wrtInfoDetail.do?applnum="+cnfrmPrchReqVO.getApplnum();
	}
	
	/**
	* 원본 파일 업로드 controller
	* @param cnfrmPrchIsueVO
	* @param issueFile
	* @param principal
	* @return String
	* @throws Exception
	* @author 신혜영
	* @since 2018. 12. 28.
	* @version 1.0
	*/
	@RequestMapping(value="/uploadIssueFile", method=RequestMethod.POST)
	public String uploadIssueFile(@ModelAttribute CnfrmPrchIsueVO cnfrmPrchIsueVO, @ModelAttribute MultipartFile issueFile, Principal principal) throws Exception {
		
		wrtInfoDetailService.insertIssueFile(cnfrmPrchIsueVO, issueFile, principal.getName());
		
		logger.info("end upload issue file controller");
		
		return "forward:wrtInfoDetail.do?applnum="+cnfrmPrchIsueVO.getApplnum();
	}
	
	/**
	* 작성자가 입력한 수정요청사항 저장 
	* @param 
	* @return
	* @throws
	* @author 신혜영
	* @since 2019. 1. 2.
	* @version 1.0
	*/
	@RequestMapping(value="/updateMdfReq", method=RequestMethod.PUT)
	@ResponseBody
	public String updateMdfReq(@RequestBody Map<String, Object> mdfReqMap) {
		
		if ( wrtInfoDetailService.updateMdfReq(mdfReqMap) == 1) {
			logger.info("end save modify request controller");
			return "success";
		} else {
			logger.info("fail save modify request controller");
			return "false";
		}
	}
}
