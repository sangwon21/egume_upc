package com.upc.admin.deplist.service;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.upc.admin.adminlist.service.AdminListServiceImpl;
import com.upc.admin.common.vo.AdminVO;
import com.upc.admin.deplist.dao.DepositListDAO;
import com.upc.admin.deplist.vo.DepositCnfrmVO;
import com.upc.admin.deplist.vo.SearchVO;
import com.upc.user.usrinf.vo.UsrInfVO;

@Service("depositListService")
public class DepositListServiceImpl implements DepositListService {
	
	private static final org.slf4j.Logger logger = LoggerFactory.getLogger(DepositListServiceImpl.class);

	@Autowired
	private DepositListDAO dao;
	
	@Override
	public List<DepositCnfrmVO> depList(SearchVO searchVO) throws Exception {
		List<DepositCnfrmVO> depList = null;
		
		//페이지에 처음 접속 시, 접수일자 조회일자를 1주일전~현재 로 세팅해줌
		if (searchVO.getDateFrom() == null && searchVO.getDateTo() == null) {
			SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyyMMdd");
			Date currentTime = new Date();
			String mTime = simpleDateFormat.format(currentTime);
			searchVO.setDateTo(mTime);
			Calendar cal = Calendar.getInstance();
			cal.add(Calendar.DAY_OF_WEEK_IN_MONTH, -1);
			searchVO.setDateFrom(simpleDateFormat.format(cal.getTime()));
		}		
		
		// 전체 접수건
		int boardTotUnit = dao.getBoardTotUnit(searchVO);
		// 현재페이지
		int pageIndex = searchVO.getPageIndex();
		// 한페이지당 건 수
		int pageUnit = searchVO.getPageUnit();
		// 보여줄 페이지 크기
		int pageSize = searchVO.getPageSize();
		// 전체페이지
		int totPage = (boardTotUnit % pageUnit == 0) ? (boardTotUnit / pageUnit) : (boardTotUnit / pageUnit + 1); 
		// 시작페이지
		int firstIndex = ((pageIndex - 1) / pageSize) * pageSize + 1;
		// 끝페이지
		int lastIndex = firstIndex + pageSize - 1;
		//끝페이지 처리
		if (lastIndex > totPage) {
			lastIndex = totPage;
		}
		searchVO.setBoardTotUnit(boardTotUnit);
		searchVO.setTotPage(totPage);
		searchVO.setFirstIndex(firstIndex);
		searchVO.setLastIndex(lastIndex);
		logger.info("Processing : Paging Ok");
		try {
			depList = dao.depList(searchVO);
		}catch (Exception e) {
			logger.error("Error occurred : database select(depList)");
		}
		return depList;
	}

	@Override
	public int delDep(String delDepSeq) throws Exception {
		return dao.delDep(delDepSeq);
	}

	@Override
	public UsrInfVO searchCmpnCeoNm(String prtnum) throws Exception {
		return dao.searchCmpnCeoNm(prtnum);
	}

	@Override
	public void insertDepositHsty(DepositCnfrmVO depCnfrmVO) throws Exception {
		dao.insertDepositHsty(depCnfrmVO);
	}

	@Override
	public int updateUsrRmncnt(DepositCnfrmVO depCnfrmVO) throws Exception {
		return dao.updateUsrRmncnt(depCnfrmVO);
	}

	@Override
	public DepositCnfrmVO selectDepositHsty(String depseq) throws Exception {
		return dao.selectDepositHsty(depseq);
	}

	@Override
	public int getBoardTotUnit(SearchVO searchVO) {
		return dao.getBoardTotUnit(searchVO);
	}
	
	

}
